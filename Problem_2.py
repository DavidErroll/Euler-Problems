# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import time

d_start = time.clock()

last_fib = 0
fib_a = 0
fib_b = 1
fib_sum = 0

while last_fib <= 4000000:
    last_fib = fib_a + fib_b
    fib_a = fib_b
    fib_b = last_fib
    if  last_fib % 2 == 0:
        fib_sum = fib_sum + last_fib

print(fib_sum)
print(time.clock() - d_start)


alt_start = time.clock()

def fibs(limit):
    a, b = 0, 1
    while a < limit:
        yield a
        a, b = b, a + b

print(sum(i for i in fibs(4000000) if not i % 2))
print(time.clock() - alt_start)
